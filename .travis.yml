os:
  - linux

sudo: required

services:
  - docker

language: node_js

node_js:
  - "8.11.3"

jdk:
  - oraclejdk8

cache:
  yarn: true
  directories:
    - node
    - node_modules
    - $HOME/.m2
    - $HOME/.yarn-cache

env:
  global:
    - VERSION=1.${TRAVIS_BUILD_NUMBER}
    - NODE_VERSION=8.11.3
    - SPRING_OUTPUT_ANSI_ENABLED=ALWAYS
    - SPRING_JPA_SHOW_SQL=false

before_install:
  - jdk_switcher use oraclejdk8
  - java -version
  - sudo /etc/init.d/mysql stop
  - sudo /etc/init.d/postgresql stop
  # Repo for Yarn
  - curl -o- -L https://yarnpkg.com/install.sh | bash -s
  - export PATH="$HOME/.yarn/bin:$PATH"

  - wget https://github.com/clnperez/cli/releases/download/1.0/docker-linux-amd64
  - chmod 755 docker-linux-amd64
  - docker pull multiarch/qemu-user-static:register
  - docker run --rm --privileged multiarch/qemu-user-static:register --reset
  - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"

install:
  - yarn install
  - chmod +x mvnw
  #- ./mvnw clean test
  - yarn test
  - yarn build
  - ./mvnw verify -Pprod -DskipTests

script:
  - make amd64
  - make arm64v8
  - make arm32v7

after_success:
    - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
    - docker push $REPO/$IMAGE_NAME:amd64
    - docker push $REPO/$IMAGE_NAME:arm64v8
    - docker push $REPO/$IMAGE_NAME:arm32v7
    - ./docker-linux-amd64 -v
    - ./docker-linux-amd64 manifest create $REPO/$IMAGE_NAME:latest $REPO/$IMAGE_NAME:amd64 $REPO/$IMAGE_NAME:arm64v8 $REPO/$IMAGE_NAME:arm32v7 -a
    - ./docker-linux-amd64 manifest inspect $REPO/$IMAGE_NAME:latest
    - ./docker-linux-amd64 manifest annotate $REPO/$IMAGE_NAME:latest $REPO/$IMAGE_NAME:amd64
    - ./docker-linux-amd64 manifest annotate $REPO/$IMAGE_NAME:latest $REPO/$IMAGE_NAME:arm64v8 --os linux --arch arm64 --variant armv8
    - ./docker-linux-amd64 manifest annotate $REPO/$IMAGE_NAME:latest $REPO/$IMAGE_NAME:arm32v7 --os linux --arch arm
    - ./docker-linux-amd64 manifest push $REPO/$IMAGE_NAME:latest

notifications:
  webhooks:
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: false     # default: false
